Создание микросервиса
1. Установка C# Dev Kit от Microsoft расширение
2. Ctrl + Shift + P
3. .NET: New Project
4. Далее в списке выбрать aspnetcore-webapi или webapi или аналог подходящий
5. Далее выбор папки и создание проекта
 
 
Запуск проекта (для проверки)
1. Переходим на cs и нажимаем справа на запуск без дебаггера 
 
Создаем docker-file
# Stage 1: сборка
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src
COPY . .
RUN dotnet restore
RUN dotnet publish -c Release -o /app/publish

# Stage 2: финальный образ
FROM mcr.microsoft.com/dotnet/aspnet:8.0
WORKDIR /app
COPY --from=build /app/publish .
EXPOSE 8081
ENV ASPNETCORE_URLS=http://+:8081
ENTRYPOINT ["dotnet", "WarmHouse.SensorService.dll"]


Создать общую сеть
1. docker network create app-network
 
Работа с docker для sensor
1. Собираем image
    docker build -t s-srv-img .
2. запускаем контейнер (и прокидываем порт 5104)
     docker run --network app-network -e ASPNETCORE_URLS=http://+:8081 -p 8081:8081 --name s-srv-cnt s-srv-img
     или если в докер уже указан ENV ASPNETCORE_URLS=http://+:8081 то 
     docker run -d -p 8081:8081 --name s-srv-cnt s-srv-img
     или для development-режима
     docker run --network app-network \
                -e ASPNETCORE_ENVIRONMENT=Development \
                -e ASPNETCORE_URLS=http://+:8081 \
                -p 8081:8081 \
                --name s-srv-cnt \
                s-srv-img

3. http://localhost:8081/weatherforecast
4. Останавливаем контейнер
   docker stop s-srv-cnt
 
 
 
Установка и настройка КОНГ и окружения 
УСТАНОВКА И НАСТРОЙКА KONG 
 
1. Установка postgre
docker run -d --name kong-db \
 --network=app-network \
  -e POSTGRES_USER=kong \
  -e POSTGRES_DB=kong \
  -e POSTGRES_PASSWORD=kong \
  postgres:13
  
2. Выполнить миграции
docker run --rm \
 --network=app-network \
  --link kong-db:kong-db \
  -e KONG_DATABASE=postgres \
  -e KONG_PG_HOST=kong-db \
  -e KONG_PG_USER=kong \
  -e KONG_PG_PASSWORD=kong \
  -e KONG_PG_DATABASE=kong \
  kong:3.6 kong migrations bootstrap
  
3. Запуск конг  
docker run -d \
  --name kong \
  --network=app-network \
  --link kong-db:kong-db \
  -e KONG_DATABASE=postgres \
  -e KONG_PG_HOST=kong-db \
  -e KONG_PG_USER=kong \
  -e KONG_PG_PASSWORD=kong \
  -e KONG_PG_DATABASE=kong \
  -e KONG_PROXY_ACCESS_LOG=/dev/stdout \
  -e KONG_ADMIN_ACCESS_LOG=/dev/stdout \
  -e KONG_PROXY_ERROR_LOG=/dev/stderr \
  -e KONG_ADMIN_ERROR_LOG=/dev/stderr \
  -e KONG_ADMIN_LISTEN="0.0.0.0:8001, 0.0.0.0:8444 ssl" \
  -p 8000:8000 \
  -p 8443:8443 \
  -p 8001:8001 \
  -p 8444:8444 \
  kong:3.6
 
 
 
-- Регистрация сервисов в конг
--ДЛя нотификации
curl -X POST http://localhost:8001/services   --data name=n-srv-cnt   --data url='http://n-srv-cnt:5106'
--марщрут сервиса
curl -X POST http://localhost:8001/services/n-srv-cnt/routes   --data name=n-srv-cnt   --data 'paths[]=/n-srv'
 
-Аналогично для сенсора
 
 
После этого все станет доступно например как:
http://localhost:8000/n-srv/weatherforecast
http://localhost:8000/s-srv/weatherforecast
 
 
