version: '3.8'

services:

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    restart: unless-stopped
    ports:
      - "5673:5672"   # AMQP protocol
      - "15673:15672" # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=password123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq
    networks:
      - smarthome-network  

  postgres:
    image: postgres:16-alpine
    container_name: smarthome-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres 
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./WarmHouse.Monolit/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: on-failure    
    networks:
      - smarthome-network   

  device-management-postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: devicedb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./WarmHouse.DeviceManagerService/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    restart: on-failure    
    networks:
      - smarthome-network      

  telemetry-postgres:
    image: postgres:16-alpine
    container_name: telemetry-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres 
    volumes:
      - ./WarmHouse.TelemetryService/scripts/telemetry-init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: on-failure        
    networks:
      - smarthome-network    

  pgadmin:
    image: dpage/pgadmin4
    container_name: smarthome-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: appdeveloper@bk.ru
      PGADMIN_DEFAULT_PASSWORD: miropres202
    ports:
      - "8201:80"
    restart: on-failure   
    networks:
      - smarthome-network

  sensor-service:
    build: ./WarmHouse.SensorService
    ports:
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    restart: on-failure   
    networks:
      - smarthome-network   
    
  telemetry-service:
    build:
      context: ./WarmHouse.TelemetryService
      dockerfile: Dockerfile
    ports:
      - "8310:8310"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development   
    restart: on-failure         
    depends_on:
      - telemetry-postgres
      - rabbitmq
    networks:
      - smarthome-network
    
  device-management-service:
    build:
      context: ./WarmHouse.DeviceManagerService
      dockerfile: Dockerfile
    ports:
      - "8300:8300"
    environment:
      - ConnectionStrings__DeviceDb=Host=device-management-postgres;Port=5432;Database=devicedb;Username=postgres;Password=postgres
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - device-management-postgres
      - rabbitmq
    restart: on-failure 
    networks:
      - smarthome-network    

  app:
    build:
      context: ./WarmHouse.Monolit
      dockerfile: Dockerfile
    container_name: smarthome-app
    depends_on:
      postgres:
        condition: service_healthy
      sensor-service:
        condition: service_started
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/smarthome
      - TEMPERATURE_API_URL=http://sensor-service:8081
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - smarthome-network

volumes:
  postgres_data:
  rabbitmq_data:
  rabbitmq_logs:


networks:
  smarthome-network:
    driver: bridge
    external: true